{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Jet",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#jet"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#template"
		}
	],
	"repository": {
		"comments": {
			"name": "comment.block.jet",
			"begin": "\\{\\*",
			"end": "\\*\\}"
		},
		"jet": {
			"name": "punctuation.definition.template.jet",
			"begin": "\\{\\{",
			"end": "\\}\\}",
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#functions"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#variables"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.jet",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.jet",
					"match": "\\\\."
				},
				{
					"name": "source.jet",
					"match": "\\{\\{(?:.)\\}\\}"
				},
				{
					"include": "#jet"
				}
			]
		},
		"keywords": {
			"name": "keyword.other.jet",
			"patterns": [
				{
					"name": "keyword.control.jet",
					"match": "\\b(extends|if|end|range|else|block|yield|include|includeIfExists|import)\\b"
				},
				{
					"name": "keyword.operator.jet",
					"match": "\\s*(=|:=)\\s*"
				},
				{
					"name": "keyword.operator.jet",
					"match": "[+\\-*/%]"
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"name": "support.function.jet",
					"match": "([\\w\\d_]+)(?=\\(\\s*([^)\\(]*)\\s*\\))"
				},
				{
					"name": "support.function.jet",
					"match": "(?<=\\|)([\\w\\d_]+)"
				},
				{
					"name": "support.function.jet",
					"match": "([\\w\\d_]+)(?=:\"[^\"]*\")"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.assignment.jet",
					"match": "\\s*(=|:=)\\s*"
				},
				{
					"name": "keyword.operator.arithmetic.jet",
					"match": "[+\\-*/%]"
				},
				{
					"name": "keyword.operator.comparison.jet",
					"match": "[<>]=?|==|!="
				}
			]
		},
		"constants": {
			"name": "constant.other.jet",
			"patterns": [
				{
					"name": "constant.numeric.jet",
					"match": "\\b\\d+\\b"
				},
				{
					"name": "constant.language.jet",
					"match": "\\b(true|false|null)\\b"
				}
			]
		},
		"variables": {
      "name": "variable.other.jet",
      "patterns": [
        {
          "name": "variable.other.jet",
          "match": "(\\.[a-zA-Z_][a-zA-Z0-9_]*)|([a-zA-Z_][a-zA-Z0-9_]*)"
        }
      ]
    },
		"template": {
			"patterns": [
				{
					"name": "punctuation.definition.tag.begin.html",
					"match": "</?(?=\\w)"
				},
				{
					"name": "punctuation.definition.tag.end.html",
					"match": "/?>"
				},
				{
					"name": "entity.name.tag.block.any.html",
					"match": "(?<=</?)([a-zA-Z][a-zA-Z0-9]*)"
				},
				{
					"name": "entity.other.attribute-name.html",
					"match": "\\b([a-zA-Z][a-zA-Z0-9]*)\\b"
				}
			]
		}
	},
	"scopeName": "source.jet"
}